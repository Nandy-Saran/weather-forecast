# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2018-04-03 01:09
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Crop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('seas_no', models.CharField(blank=True, max_length=50, null=True)),
                ('pH_min', models.FloatField(blank=True, null=True)),
                ('pH_max', models.FloatField(blank=True, null=True)),
                ('min_yieldT', models.FloatField(blank=True, null=True)),
                ('MintempC', models.FloatField(blank=True, null=True)),
                ('MaxtempC', models.FloatField(blank=True, null=True)),
                ('fertilizer', models.CharField(blank=True, max_length=150, null=True)),
                ('growthRegul', models.CharField(blank=True, max_length=230, null=True)),
                ('pick_start', models.FloatField(blank=True, null=True)),
                ('count', models.FloatField(blank=True, null=True)),
                ('interv', models.FloatField(blank=True, null=True)),
                ('max_yieldT', models.FloatField(blank=True, null=True)),
                ('FlowIniti', models.FloatField(blank=True, null=True)),
                ('min_RainMM', models.FloatField(blank=True, null=True)),
                ('max_RainMM', models.FloatField(blank=True, null=True)),
                ('ferAdv', models.CharField(blank=True, max_length=300, null=True)),
                ('irrAdv', models.CharField(blank=True, max_length=300, null=True)),
                ('ElecConduc', models.FloatField(blank=True, null=True)),
                ('OrgCarbonP', models.FloatField(blank=True, null=True)),
                ('Nitrogenkgha', models.FloatField(blank=True, null=True)),
                ('Phosphoruskgha', models.FloatField(blank=True, null=True)),
                ('Potassium_kgha', models.FloatField(blank=True, null=True)),
                ('Sulphur_ppm', models.FloatField(blank=True, null=True)),
                ('Zinc_ppm', models.FloatField(blank=True, null=True)),
                ('Boron_ppm', models.FloatField(blank=True, null=True)),
                ('Ironppm', models.FloatField(blank=True, null=True)),
                ('Manganese_ppm', models.FloatField(blank=True, null=True)),
                ('Copper_ppm', models.FloatField(blank=True, null=True)),
                ('Waterph', models.FloatField(blank=True, null=True)),
                ('min2months', models.FloatField(blank=True, null=True)),
                ('max2months', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Disease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diseaseName', models.CharField(max_length=50)),
                ('Symptoms', models.TextField(blank=True, null=True)),
                ('Remedy', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='disPest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crop', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='datamodel.Crop')),
                ('disease', models.ManyToManyField(to='datamodel.Disease')),
            ],
        ),
        migrations.CreateModel(
            name='Pesticide',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pestname', models.CharField(max_length=50)),
                ('pesticide', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('Lat', models.CharField(blank=True, max_length=30)),
                ('Long', models.CharField(blank=True, max_length=30)),
                ('Pincode', models.CharField(blank=True, max_length=30)),
                ('cropList', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Weather',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(max_length=30)),
                ('datenum', models.IntegerField()),
                ('moonrise', models.CharField(max_length=30)),
                ('moonset', models.CharField(max_length=30)),
                ('sunrise', models.CharField(max_length=30)),
                ('sunset', models.CharField(max_length=30)),
                ('maxtempC', models.FloatField()),
                ('mintempC', models.FloatField()),
                ('rainMM', models.FloatField()),
                ('pressure', models.FloatField()),
                ('humidity', models.FloatField()),
                ('WindSpeedMil', models.FloatField()),
                ('WindGustMil', models.FloatField()),
                ('Winddir16Point', models.CharField(max_length=30)),
                ('WindDesc', models.CharField(max_length=100)),
                ('WindDirdeg', models.IntegerField()),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datamodel.Place')),
            ],
        ),
        migrations.AddField(
            model_name='place',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datamodel.State'),
        ),
        migrations.AddField(
            model_name='dispest',
            name='pest',
            field=models.ManyToManyField(to='datamodel.Pesticide'),
        ),
    ]
